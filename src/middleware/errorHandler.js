/**
 * @overview Centralized error handler.
 */
'use strict';

import logger from 'winston';
import Boom from 'boom';

export default function () {
  /**
   * @name errorHandler
   * @function
   *
   * @description
   * Handles errors thrown in the app.
   * Responds with the JSON payload generated by Boom.
   * If they are 5xx errors, logs them.
   */
  return async function errorHandler (ctx, next) {
    try {
      await next();
    } catch (e) {
      let error;
      // If it's not a Boom error or is a server error, log it and send a 500.
      if (!e.isBoom && e.status && !Number.isNaN(e.status)) {
        // Koa JWT middleware throws with ctx.throw(401).
        if (e.status === 401) {
          error = Boom.unauthorized('You must be logged in to access.');
        } else {
          error = Boom.create(e.status);
        }
      } else {
        logger.error(e);
        error = Boom.badImplementation('An internal server error ocurred.');
      }

      // Send the JSON error description.
      ctx.status = error.output.statusCode;
      ctx.body = error.output.payload;
    }
  };
}
