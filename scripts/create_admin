#! /usr/bin/env node

'use strict';

// Allow me to require ES2015 modules
require('babel-core/register');

const readline = require('readline');

if (process.env.NODE_ENV != 'production') {
  require('dotenv').load({ path: `${__dirname}/../.env` });
}

const { Admin } = require('./../src/apps/users/models/admin');

(async function main () {
  let data = await readData();

  try {
    await Admin.create(data);
    console.log(`Admin created successfully!\nWelcome, ${data.firstName}!`);
  } catch (e) {
    console.error('Something bad happened!', e);
  }
})();

async function readData () {
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
  });

  let data = {
    username: await readValue('Enter username: ', rl),
    firstName: await readValue('Enter first name: ', rl),
    lastName: await readValue('Enter last name: ', rl),
    email: await readValue('Enter email: ', rl),
    password: await readValue('Enter password: ', rl),
  };

  // We don't need the readline anymore
  rl.close();

  return data;
}

function readValue (msg, rl) {
  return new Promise((resolve) => {
    rl.question(msg, (value) => resolve(value));
  });
}
